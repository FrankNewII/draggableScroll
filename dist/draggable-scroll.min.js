!function(e){if("function"==typeof define&&define.amd)define(["jquery"],e);else if("object"==typeof module&&module.exports)module.exports=e(require("jquery"));else{if("undefined"==typeof jQuery)throw new Error("DraggableScroll: Draggable scroll is depended on JQuery. \n            Please append JQuery to document before load DraggableScroll plugin.");e(jQuery)}}(function(a){a.fn.draggableScroll=function e(l){if(!(this instanceof e))return(l=e.validateConfig(l)).$element=this,new e(l);this._config=l,this._$scrolledElm=this._config.$element,this._pressed=!1,this._findElm()._appendStyles()._initListeners()};var l=a.fn.draggableScroll,e=a.fn.draggableScroll.prototype;l.validateConfig=function(e){switch(typeof e){case"object":return a.extend(l.defaultConfig,e);case"undefined":return a.extend(l.defaultConfig,{});default:throw new Error("DraggableScroll: Undefined type of config argument.")}},l.defaultConfig={scrollX:!0,scrollY:!0,dropOnMouseLeave:!1},e.scrollTo=function(e,l){var o="scroll"+e.charAt(0).toUpperCase()+e.slice(1),r=l?this._$scrolledElm[o](l):this._$scrolledElm[o]();return l&&console.log(arguments),l?this:r},e._findElm=function(){if(this._$scrolledWrapper=this._config.$element,this._$scrolledElm=this._config.$element.find("[data-draggable-scrolled-content]"),0===this._$scrolledElm.length)throw new Error("DraggableScroll: Cannon find scrolled content element. \n            Use [data-draggable-scrolled-content] inside [data-draggable-scroll] container.");if(1<this._$scrolledElm.length)throw new Error("DraggableScroll: Found more than one [data-draggable-scrolled-content] inside [data-draggable-scroll] container.");return this},e._appendStyles=function(){return this._$scrolledWrapper.css("user-select","none"),this._$scrolledElm.css({overflow:"scroll",height:"100%",width:"100%"}),this},e._initListeners=function(){var l,o,r,t,n,s=this;return this._$scrolledElm.on("mousedown",function(e){n=!0,l=e.clientX,o=e.clientY,r=s.scrollTo("left"),t=s.scrollTo("top"),s._$scrolledWrapper.addClass("scrollDraggable-draging")}).on("mouseup",function(){n=!1,s._$scrolledWrapper.removeClass("scrollDraggable-draging")}).on("mousemove",function(e){n&&(s._config.scrollX&&s.scrollTo("left",r+(l-e.clientX)),s._config.scrollY&&s.scrollTo("top",t+(o-e.clientY)))}),this._$scrolledWrapper.find("[data-draggable-scroll-control]").on("click",function(e){var l,o=a(e.target).data("draggableScrollControl").split(":"),r=o[0],t=parseInt(o[1]);switch(r){case"top":t=0-t,l=s.scrollTo("top");break;case"bottom":l=s.scrollTo("top"),r="top";break;case"left":l=s.scrollTo("left"),t=0-t;break;case"right":r="left",l=s.scrollTo("left")}s.scrollTo(r,l+t)}),this._config.dropOnMouseLeave&&this._$scrolledElm.on("mouseleave",function(){n=!1}),this};var o=a("[data-draggable-scroll]");o.length&&o.each(function(e,l){a(l).draggableScroll()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
