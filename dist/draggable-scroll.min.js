!function(t){if("function"==typeof define&&define.amd)define(["jquery"],t);else if("object"==typeof module&&module.exports)module.exports=t(require("jquery"));else{if("undefined"==typeof jQuery)throw new Error("DraggableScroll: Draggable scroll is depended on JQuery. \n            Please append JQuery to document before load DraggableScroll plugin.");t(jQuery)}}(function(r){r.fn.draggableScroll=function t(i){if(!(this instanceof t))return(i=t.validateConfig(i)).$element=this,new t(i);this._config=i,this._$scrolledElm=this._config.$element,this._pressed=!1,this._startMousedownX=void 0,this._isAnimate=!1,this._startMousedownY=void 0,this._startScrollX=void 0,this._startScrollY=void 0,this._startInertionPointX=0,this._startInertionPointY=0,this._lastInertionPointX=this._startInertionPointX,this._lastInertionPointY=this._startInertionPointY,this._findElm()._appendStyles()._initListeners()};var i,e,s=r.fn.draggableScroll,t=r.fn.draggableScroll.prototype;s.validateConfig=function(t){switch(typeof t){case"object":return r.extend(s.defaultConfig,t);case"undefined":return r.extend(s.defaultConfig,{});default:throw new Error("DraggableScroll: Undefined type of config argument.")}},s._unitsConverters={px:function(t){return t},vw:(e=r(document),function(t){return e.width()/100*t}),vh:(i=r(document),function(t){return i.height()/100*t})},s.addUnitConverter=function(t,i){s._unitsConverters[t]&&console.warn("Converter for "+t+" was changed."),s._unitsConverters[t]=i},s.converterUnitToPxs=function(t,i){var e=s._unitsConverters[i];if(!e)throw new Error('Undefined css units named as: "'+i+'" \n.Add converter ($.fn.draggableScroll.addUnitConverter(unit, convertFunction)) to PXs for that unit, or you have a typo.');return e(t)},s.defaultConfig={scrollX:!0,scrollY:!0,dropOnMouseLeave:!1,animateScrollByControls:!0,animateScrollTime:200,hideScrollbars:!0,inertiaByDragging:!0},t.scrollTo=function(t,i,e){var n,o="scroll"+t.charAt(0).toUpperCase()+t.slice(1);if(void 0!==i)if(e){var r={};r[o]=i,this._$scrolledElm.animate(r,this._config.animateScrollTime),this._isAnimate=!0,setTimeout(function(){this._isAnimate=!1}.bind(this),this._config.animateScrollTime)}else this._$scrolledElm[o](i);else n=this._$scrolledElm[o]();return n},t._findElm=function(){if(this._$scrolledWrapper=this._config.$element,this._$scrolledElm=this._config.$element.find("[data-draggable-scrolled-content]"),0===this._$scrolledElm.length)throw new Error("DraggableScroll: Cannon find scrolled content element. \n            Use [data-draggable-scrolled-content] inside [data-draggable-scroll] container.");if(1<this._$scrolledElm.length)throw new Error("DraggableScroll: Found more than one [data-draggable-scrolled-content] inside [data-draggable-scroll] container.");return this},t._appendStyles=function(){var t=this._config.hideScrollbars;return this._$scrolledWrapper.css("user-select","none"),t&&this._$scrolledWrapper.css("overflow","hidden"),this._$scrolledElm.css({overflow:"scroll",height:t?"calc(100% + 17px)":"100%",width:t?"calc(100% + 17px)":"100%"}),this},t._initListeners=function(){return this._$scrolledElm.on("mousedown",this.__mousedownHandler.bind(this)).on("mouseup",this.__mouseupHandler.bind(this)).on("mousemove",this.__mousemoveHandler.bind(this)),this._$scrolledWrapper.find("[data-draggable-scroll-control]").on("click",this.__controlsClickHandler.bind(this)),this._config.dropOnMouseLeave&&this._$scrolledElm.on("mouseleave",this.__mouseupHandler.bind(this)),this},t.__inertionMove=function(){Math.abs(this._inertiaX)<1&&(this._inertiaX=0);var t=this;if(Math.abs(this._inertiaY)<1&&(this._inertiaY=0),this._inertiaX){var i=this._inertiaX/20;this._inertiaX-=i/2,this.scrollTo("left",this.scrollTo("left")+i)}if(this._inertiaY){var e=this._inertiaY/20;this._inertiaY-=e/2,this.scrollTo("top",this.scrollTo("top")+e)}this._$scrolledWrapper.addClass("scrollDraggable-inertion-move"),(this._inertiaY||this._inertiaX)&&setTimeout(function(){t.__inertionMove()},0)},t.__mouseupHandler=function(t){if(this._pressed=!1,this._$scrolledWrapper.removeClass("scrollDraggable-draging"),this._config.inertiaByDragging){var i=this._lastInertionPointX,e=this._lastInertionPointY,n=t.clientX,o=t.clientY;this._inertiaX=60*(i-n),this._inertiaY=60*(e-o),this.__inertionMove()}},t.__mousedownHandler=function(t){this._pressed=!0,this._startMousedownX=t.clientX,this._startMousedownY=t.clientY,this._startScrollX=this.scrollTo("left"),this._startScrollY=this.scrollTo("top"),this._config.inertiaByDragging&&(this._lastInertionPointX=this._startInertionPointX,this._lastInertionPointY=this._startInertionPointY,this._startInertionPointX=t.clientX,this._startInertionPointY=t.clientY,this._inertiaX=0,this._inertiaY=0),this._$scrolledWrapper.addClass("scrollDraggable-draging")},t.__mousemoveHandler=function(t){this._pressed&&(this._config.inertiaByDragging&&(this._lastInertionPointX=this._startInertionPointX,this._lastInertionPointY=this._startInertionPointY,this._startInertionPointX=t.clientX,this._startInertionPointY=t.clientY),this._config.scrollX&&this.scrollTo("left",this._startScrollX+(this._startMousedownX-t.clientX)),this._config.scrollY&&this.scrollTo("top",this._startScrollY+(this._startMousedownY-t.clientY)))},t.__controlsClickHandler=function(t){if(!this._isAnimate){var i,e=r(t.target).data("draggableScrollControl").split(":"),n=e[0],o=s.converterUnitToPxs(parseInt(e[1]),e[1].match(/[^\d\.]+/i)[0]);switch(n){case"top":o=0-o,i=this.scrollTo("top");break;case"bottom":i=this.scrollTo("top"),n="top";break;case"left":i=this.scrollTo("left"),o=0-o;break;case"right":n="left",i=this.scrollTo("left")}this.scrollTo(n,i+o,this._config.animateScrollByControls)}};var n=r("[data-draggable-scroll]");n.length&&n.each(function(t,i){r(i).draggableScroll()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
